{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"byconaut \u00b6 The byconaut package contains scripts for data processing for and based on the bycon package. The main use cases are: generation of utility collections for the standard Progenetix data model collations frequencymaps provide binned CNV frequency values for samples belonging to a given collation code I/O & transformations for bycon generated files Installation \u00b6 byconaut depends on the bycon package which can be downloaded from its repository . Please see the repository and the corresponding documentation site . While there is also a pip installation possible over pip3 install bycon this will not include the local configuration files necessary e.g. for processing the databases. Database setup \u00b6 Option A: examplez from \u00b6 download unpack somewhere & restore with (your paths etc.): mongosh examplez --eval 'db.dropDatabase()' mongorestore --db $database .../mongodump/examplez/ proceed w/ step 4 ... below Option B: Create your own databases \u00b6 Create database and variants collection update the local bycon installation for your database information andlocal parameters database name(s) filter_definitions for parameter mapping Create metadata collections - callsets , biosamples and individuals Create statusmaps and CNV statistics for the callsets collection only relevant for CNV database use cases Create the collations collection which uses filter_definitions and the corresponding values to aggregate information for query matching, term expansion ... Create frequencymaps for binned CNV data relies on existence of statusmaps in callsets and collations only needed for CNV data Data maintenance scripts \u00b6 callsetsStatusmapsRefresher (CNV) \u00b6 The callsetsStatusmapsRefresher script creates CNV status data for binned genomic intervals, for each CNV callset ( i.e. the CNV data of all corresponding variants from the same experiment/sample). Examples \u00b6 bin/callsetsStatusmapsRefresher.py -d examplez collationsCreator \u00b6 collations provide aggregate data for all samples etc. matching a given classification, external reference or other entity code, including hierarchy data for term expansion when matching the code. The hierarchy data is provided in rsrc/classificationTrees/__filterType__/numbered-hierarchies.tsv as a list of ordered branches in the format code | label | depth | order . Examples \u00b6 bin/collationsCreator.py -d examplez --collationtypes \"icdom,icdot\" bin/collationsCreator.py -d progenetix frequencymapsCreator (CNV) \u00b6 frequencymaps contain pre-computed frequencies for CNV data, aggregating the binned statusmaps data from all callsets belonging to a given collation. Examples \u00b6 bin/frequencymapsCreator.py -d examplez Utility apps \u00b6 ISCNsegmenter \u00b6 Examples \u00b6 bin/ISCNsegmenter.py -i imports/ccghtest.tab -o exports/cghtest-with-histo.pgxseg","title":"`byconaut`"},{"location":"#installation","text":"byconaut depends on the bycon package which can be downloaded from its repository . Please see the repository and the corresponding documentation site . While there is also a pip installation possible over pip3 install bycon this will not include the local configuration files necessary e.g. for processing the databases.","title":"Installation"},{"location":"#database-setup","text":"","title":"Database setup"},{"location":"#option-a-examplez-from","text":"download unpack somewhere & restore with (your paths etc.): mongosh examplez --eval 'db.dropDatabase()' mongorestore --db $database .../mongodump/examplez/ proceed w/ step 4 ... below","title":"Option A: examplez from "},{"location":"#option-b-create-your-own-databases","text":"Create database and variants collection update the local bycon installation for your database information andlocal parameters database name(s) filter_definitions for parameter mapping Create metadata collections - callsets , biosamples and individuals Create statusmaps and CNV statistics for the callsets collection only relevant for CNV database use cases Create the collations collection which uses filter_definitions and the corresponding values to aggregate information for query matching, term expansion ... Create frequencymaps for binned CNV data relies on existence of statusmaps in callsets and collations only needed for CNV data","title":"Option B: Create your own databases"},{"location":"#data-maintenance-scripts","text":"","title":"Data maintenance scripts"},{"location":"#callsetsstatusmapsrefresher-cnv","text":"The callsetsStatusmapsRefresher script creates CNV status data for binned genomic intervals, for each CNV callset ( i.e. the CNV data of all corresponding variants from the same experiment/sample).","title":"callsetsStatusmapsRefresher (CNV)"},{"location":"#collationscreator","text":"collations provide aggregate data for all samples etc. matching a given classification, external reference or other entity code, including hierarchy data for term expansion when matching the code. The hierarchy data is provided in rsrc/classificationTrees/__filterType__/numbered-hierarchies.tsv as a list of ordered branches in the format code | label | depth | order .","title":"collationsCreator"},{"location":"#frequencymapscreator-cnv","text":"frequencymaps contain pre-computed frequencies for CNV data, aggregating the binned statusmaps data from all callsets belonging to a given collation.","title":"frequencymapsCreator (CNV)"},{"location":"#utility-apps","text":"","title":"Utility apps"},{"location":"#iscnsegmenter","text":"","title":"ISCNsegmenter"},{"location":"changes-todo/","text":"Changes & TODOs \u00b6 Most of the changes will be documented in bycon . This page just lists some very specific byconaut changes and plans. Changes \u00b6 2023-07-27 \u00b6 added the _byconServicesDB ( genes , geolocs , geocountries ) to the /rsrc/mongodump/ directory 2023-06-06 \u00b6 moved MongoDB index generation to housekeeping.py started to organize actions in housekeeping.py w/ user prompts To Do \u00b6 A lot...","title":"Changes & TODOs"},{"location":"changes-todo/#changes","text":"","title":"Changes"},{"location":"changes-todo/#2023-07-27","text":"added the _byconServicesDB ( genes , geolocs , geocountries ) to the /rsrc/mongodump/ directory","title":"2023-07-27"},{"location":"changes-todo/#2023-06-06","text":"moved MongoDB index generation to housekeeping.py started to organize actions in housekeeping.py w/ user prompts","title":"2023-06-06"},{"location":"changes-todo/#to-do","text":"A lot...","title":"To Do"}]}